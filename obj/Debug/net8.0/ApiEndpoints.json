[
  {
    "ContainingType": "SmartParkingSystem.Controllers.AuthController",
    "Method": "ChangePassword",
    "RelativePath": "api/Auth/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "changePasswordDto",
        "Type": "SmartParkingSystem.DTOs.User.ChangePasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "SmartParkingSystem.DTOs.User.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.AuthController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/Auth/me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerDto",
        "Type": "SmartParkingSystem.DTOs.User.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.BroadcastNotificationController",
    "Method": "GetAllBroadcasts",
    "RelativePath": "api/BroadcastNotification",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartParkingSystem.DTOs.BroadcastNotification.BroadcastNotificationResponseDto, SmartParkingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.BroadcastNotificationController",
    "Method": "CreateBroadcast",
    "RelativePath": "api/BroadcastNotification",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "SmartParkingSystem.DTOs.BroadcastNotification.CreateBroadcastNotificationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartParkingSystem.DTOs.BroadcastNotification.BroadcastNotificationResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.BroadcastNotificationController",
    "Method": "GetBroadcastById",
    "RelativePath": "api/BroadcastNotification/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartParkingSystem.DTOs.BroadcastNotification.BroadcastNotificationResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.BroadcastNotificationController",
    "Method": "UpdateBroadcast",
    "RelativePath": "api/BroadcastNotification/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "SmartParkingSystem.DTOs.BroadcastNotification.UpdateBroadcastNotificationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartParkingSystem.DTOs.BroadcastNotification.BroadcastNotificationResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.BroadcastNotificationController",
    "Method": "DeleteBroadcast",
    "RelativePath": "api/BroadcastNotification/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.BroadcastNotificationController",
    "Method": "SendBroadcast",
    "RelativePath": "api/BroadcastNotification/{id}/send",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.BroadcastNotificationController",
    "Method": "GetBroadcastsForAllUsers",
    "RelativePath": "api/BroadcastNotification/all-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartParkingSystem.DTOs.BroadcastNotification.BroadcastNotificationResponseDto, SmartParkingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.BroadcastNotificationController",
    "Method": "ProcessPendingBroadcasts",
    "RelativePath": "api/BroadcastNotification/process-pending",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.BroadcastNotificationController",
    "Method": "GetBroadcastsByRole",
    "RelativePath": "api/BroadcastNotification/role/{role}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "role",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartParkingSystem.DTOs.BroadcastNotification.BroadcastNotificationResponseDto, SmartParkingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.EmailNotificationController",
    "Method": "ProcessPendingEmails",
    "RelativePath": "api/EmailNotification/process-pending",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.EmailNotificationController",
    "Method": "SendNotification",
    "RelativePath": "api/EmailNotification/send",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notificationDto",
        "Type": "SmartParkingSystem.DTOs.EmailNotification.SendEmailNotificationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartParkingSystem.DTOs.EmailNotification.EmailNotificationResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.EmailNotificationController",
    "Method": "GetUserNotifications",
    "RelativePath": "api/EmailNotification/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartParkingSystem.DTOs.EmailNotification.EmailNotificationResponseDto, SmartParkingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.FeaturesController",
    "Method": "GetAll",
    "RelativePath": "api/Features",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.FeaturesController",
    "Method": "Create",
    "RelativePath": "api/Features",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "IconFile",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "PriceModifier",
        "Type": "System.Decimal",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.FeaturesController",
    "Method": "GetById",
    "RelativePath": "api/Features/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.FeaturesController",
    "Method": "Update",
    "RelativePath": "api/Features/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "IconFile",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "PriceModifier",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "IsActive",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.FeaturesController",
    "Method": "Delete",
    "RelativePath": "api/Features/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.FeaturesController",
    "Method": "GetActive",
    "RelativePath": "api/Features/active",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingRateController",
    "Method": "GetAllRates",
    "RelativePath": "api/ParkingRate",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartParkingSystem.DTOs.ParkingRate.ParkingRateResponseDto, SmartParkingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingRateController",
    "Method": "CreateRate",
    "RelativePath": "api/ParkingRate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "SmartParkingSystem.DTOs.ParkingRate.CreateParkingRateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartParkingSystem.DTOs.ParkingRate.ParkingRateResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingRateController",
    "Method": "GetRateById",
    "RelativePath": "api/ParkingRate/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartParkingSystem.DTOs.ParkingRate.ParkingRateResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingRateController",
    "Method": "UpdateRate",
    "RelativePath": "api/ParkingRate/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "SmartParkingSystem.DTOs.ParkingRate.UpdateParkingRateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartParkingSystem.DTOs.ParkingRate.ParkingRateResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingRateController",
    "Method": "DeleteRate",
    "RelativePath": "api/ParkingRate/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingRateController",
    "Method": "GetActiveRates",
    "RelativePath": "api/ParkingRate/active",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartParkingSystem.DTOs.ParkingRate.ParkingRateResponseDto, SmartParkingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingRateController",
    "Method": "GetRateByVehicleType",
    "RelativePath": "api/ParkingRate/vehicle-type/{vehicleType}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleType",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartParkingSystem.DTOs.ParkingRate.ParkingRateResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetAll",
    "RelativePath": "api/ParkingSession",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetById",
    "RelativePath": "api/ParkingSession/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "Delete",
    "RelativePath": "api/ParkingSession/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "UpdateFee",
    "RelativePath": "api/ParkingSession/{id}/fee",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "SmartParkingSystem.DTOs.ParkingSession.UpdateParkingFeeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "ActivateReservation",
    "RelativePath": "api/ParkingSession/activate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activateDto",
        "Type": "SmartParkingSystem.DTOs.ParkingSession.ActivateReservationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetAllActiveSessions",
    "RelativePath": "api/ParkingSession/active",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "BookSlot",
    "RelativePath": "api/ParkingSession/book",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookSlotDto",
        "Type": "SmartParkingSystem.DTOs.ParkingSession.BookSlotDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "CalculateParkingFee",
    "RelativePath": "api/ParkingSession/calculate-fee/{sessionId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sessionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "CancelSession",
    "RelativePath": "api/ParkingSession/cancel-session/{sessionId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sessionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "CancelReservation",
    "RelativePath": "api/ParkingSession/cancel/{sessionId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sessionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetTotalActiveSessionsCount",
    "RelativePath": "api/ParkingSession/dashboard/active-sessions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetTotalActiveSlots",
    "RelativePath": "api/ParkingSession/dashboard/active-slots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetTotalOccupiedSlots",
    "RelativePath": "api/ParkingSession/dashboard/occupied-slots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetTotalReservationsCount",
    "RelativePath": "api/ParkingSession/dashboard/reservations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetTotalRevenue",
    "RelativePath": "api/ParkingSession/dashboard/revenue",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fromDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "toDate",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "EndSession",
    "RelativePath": "api/ParkingSession/end",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "endDto",
        "Type": "SmartParkingSystem.DTOs.ParkingSession.EndParkingSessionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "ProcessPayment",
    "RelativePath": "api/ParkingSession/process-payment/{sessionId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sessionId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "paymentStatus",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetAllReservations",
    "RelativePath": "api/ParkingSession/reservations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "StartWalkInSession",
    "RelativePath": "api/ParkingSession/start",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDto",
        "Type": "SmartParkingSystem.DTOs.ParkingSession.StartParkingSessionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetUnpaidSessions",
    "RelativePath": "api/ParkingSession/unpaid",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetUserReservations",
    "RelativePath": "api/ParkingSession/user-reservations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSessionController",
    "Method": "GetUserSessions",
    "RelativePath": "api/ParkingSession/user-sessions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "GetAll",
    "RelativePath": "api/ParkingSlots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "Create",
    "RelativePath": "api/ParkingSlots",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartParkingSystem.DTOs.ParkingSlot.CreateParkingSlotDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "GetById",
    "RelativePath": "api/ParkingSlots/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "Update",
    "RelativePath": "api/ParkingSlots/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "SmartParkingSystem.DTOs.ParkingSlot.UpdateParkingSlotDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "Delete",
    "RelativePath": "api/ParkingSlots/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "GetSlotWithFeatures",
    "RelativePath": "api/ParkingSlots/{id}/features",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "GetAvailable",
    "RelativePath": "api/ParkingSlots/available",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "BulkUpdateOccupancy",
    "RelativePath": "api/ParkingSlots/bulk/occupancy",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SmartParkingSystem.Controllers.BulkOccupancyUpdateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "BulkUpdateStatus",
    "RelativePath": "api/ParkingSlots/bulk/status",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SmartParkingSystem.Controllers.BulkStatusUpdateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "GetByFeature",
    "RelativePath": "api/ParkingSlots/feature/{featureId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "featureId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "GetByFeatures",
    "RelativePath": "api/ParkingSlots/features",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "featureIds",
        "Type": "System.Collections.Generic.List\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "GetAvailableByFeatures",
    "RelativePath": "api/ParkingSlots/features/available",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "featureIds",
        "Type": "System.Collections.Generic.List\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "GetByFloor",
    "RelativePath": "api/ParkingSlots/floor/{floor}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "floor",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.ParkingSlotsController",
    "Method": "Search",
    "RelativePath": "api/ParkingSlots/search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchDto",
        "Type": "SmartParkingSystem.DTOs.ParkingSlot.SlotSearchDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.SlotFeaturesController",
    "Method": "AssignFeature",
    "RelativePath": "api/SlotFeatures/assign",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartParkingSystem.DTOs.SlotFeature.AssignSlotFeatureDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.SlotFeaturesController",
    "Method": "GetFeatureAssignments",
    "RelativePath": "api/SlotFeatures/feature/{featureId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "featureId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.SlotFeaturesController",
    "Method": "RemoveFeature",
    "RelativePath": "api/SlotFeatures/remove",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartParkingSystem.DTOs.SlotFeature.RemoveSlotFeatureDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.SlotFeaturesController",
    "Method": "GetSlotFeatures",
    "RelativePath": "api/SlotFeatures/slot/{slotId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "slotId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "SmartParkingSystem.DTOs.User.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.UserController",
    "Method": "GetUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "SmartParkingSystem.DTOs.User.UpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.UserController",
    "Method": "ActivateUser",
    "RelativePath": "api/User/{id}/activate",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.UserController",
    "Method": "DeactivateUser",
    "RelativePath": "api/User/{id}/deactivate",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.UserController",
    "Method": "UpdateUserRole",
    "RelativePath": "api/User/{id}/role",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "roleDto",
        "Type": "SmartParkingSystem.DTOs.User.UpdateUserRoleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.UserController",
    "Method": "GetUserWithVehicles",
    "RelativePath": "api/User/{id}/with-vehicles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.UserController",
    "Method": "GetUsersByRole",
    "RelativePath": "api/User/by-role/{role}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "role",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.VehicleController",
    "Method": "GetAll",
    "RelativePath": "api/Vehicle",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.VehicleController",
    "Method": "Create",
    "RelativePath": "api/Vehicle",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "LicensePlate",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "VehicleType",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Brand",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Model",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Color",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "vehicleImage",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.VehicleController",
    "Method": "GetById",
    "RelativePath": "api/Vehicle/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.VehicleController",
    "Method": "Update",
    "RelativePath": "api/Vehicle/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "LicensePlate",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "VehicleType",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Brand",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Model",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Color",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "vehicleImage",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.VehicleController",
    "Method": "Delete",
    "RelativePath": "api/Vehicle/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.VehicleController",
    "Method": "GetByLicensePlate",
    "RelativePath": "api/Vehicle/by-license-plate/{licensePlate}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "licensePlate",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartParkingSystem.Controllers.VehicleController",
    "Method": "GetUserVehicles",
    "RelativePath": "api/Vehicle/user-vehicles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  }
]