{
  "openapi": "3.0.1",
  "info": {
    "title": "Smart Parking System API",
    "description": "Backend API for managing Smart Parking System with JWT authentication and role-based access.",
    "version": "v1"
  },
  "paths": {
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/change-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/BroadcastNotification": {
      "get": {
        "tags": [
          "BroadcastNotification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BroadcastNotification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBroadcastNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBroadcastNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBroadcastNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/BroadcastNotification/{id}": {
      "get": {
        "tags": [
          "BroadcastNotification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BroadcastNotification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBroadcastNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBroadcastNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBroadcastNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BroadcastNotification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/BroadcastNotification/{id}/send": {
      "post": {
        "tags": [
          "BroadcastNotification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/BroadcastNotification/role/{role}": {
      "get": {
        "tags": [
          "BroadcastNotification"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BroadcastNotification/all-users": {
      "get": {
        "tags": [
          "BroadcastNotification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcastNotificationResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BroadcastNotification/process-pending": {
      "post": {
        "tags": [
          "BroadcastNotification"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/EmailNotification/send": {
      "post": {
        "tags": [
          "EmailNotification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmailNotificationResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailNotificationResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailNotificationResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmailNotification/user/{userId}": {
      "get": {
        "tags": [
          "EmailNotification"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailNotificationResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailNotificationResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailNotificationResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EmailNotification/process-pending": {
      "post": {
        "tags": [
          "EmailNotification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features": {
      "get": {
        "tags": [
          "Features"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Features"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeatureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeatureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeatureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Features/{id}": {
      "get": {
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeatureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeatureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeatureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Features/active": {
      "get": {
        "tags": [
          "Features"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingRate": {
      "get": {
        "tags": [
          "ParkingRate"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParkingRateResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParkingRateResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParkingRateResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ParkingRate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParkingRateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParkingRateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParkingRateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParkingRate/{id}": {
      "get": {
        "tags": [
          "ParkingRate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ParkingRate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParkingRateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParkingRateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParkingRateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ParkingRate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingRate/vehicle-type/{vehicleType}": {
      "get": {
        "tags": [
          "ParkingRate"
        ],
        "parameters": [
          {
            "name": "vehicleType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/VehicleType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParkingRateResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParkingRate/active": {
      "get": {
        "tags": [
          "ParkingRate"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParkingRateResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParkingRateResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParkingRateResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParkingSession/{id}": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ParkingSession"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/start": {
      "post": {
        "tags": [
          "ParkingSession"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartParkingSessionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StartParkingSessionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StartParkingSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/{id}/fee": {
      "put": {
        "tags": [
          "ParkingSession"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParkingFeeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParkingFeeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParkingFeeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/book": {
      "post": {
        "tags": [
          "ParkingSession"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookSlotDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookSlotDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookSlotDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/activate": {
      "post": {
        "tags": [
          "ParkingSession"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateReservationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateReservationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateReservationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/user-reservations": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/user-sessions": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/cancel/{sessionId}": {
      "post": {
        "tags": [
          "ParkingSession"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/end": {
      "post": {
        "tags": [
          "ParkingSession"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndParkingSessionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EndParkingSessionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EndParkingSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/process-payment/{sessionId}": {
      "post": {
        "tags": [
          "ParkingSession"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/unpaid": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/active": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/reservations": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/cancel-session/{sessionId}": {
      "post": {
        "tags": [
          "ParkingSession"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/calculate-fee/{sessionId}": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/dashboard/active-slots": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/dashboard/occupied-slots": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/dashboard/revenue": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/dashboard/active-sessions": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSession/dashboard/reservations": {
      "get": {
        "tags": [
          "ParkingSession"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots": {
      "get": {
        "tags": [
          "ParkingSlots"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "ParkingSlots"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParkingSlotDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParkingSlotDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParkingSlotDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots/{id}": {
      "get": {
        "tags": [
          "ParkingSlots"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "ParkingSlots"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParkingSlotDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParkingSlotDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParkingSlotDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ParkingSlots"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots/available": {
      "get": {
        "tags": [
          "ParkingSlots"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots/search": {
      "post": {
        "tags": [
          "ParkingSlots"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSearchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSearchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSearchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots/floor/{floor}": {
      "get": {
        "tags": [
          "ParkingSlots"
        ],
        "parameters": [
          {
            "name": "floor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots/{id}/features": {
      "get": {
        "tags": [
          "ParkingSlots"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots/feature/{featureId}": {
      "get": {
        "tags": [
          "ParkingSlots"
        ],
        "parameters": [
          {
            "name": "featureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots/features": {
      "post": {
        "tags": [
          "ParkingSlots"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots/features/available": {
      "post": {
        "tags": [
          "ParkingSlots"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots/bulk/status": {
      "put": {
        "tags": [
          "ParkingSlots"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkStatusUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkStatusUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkStatusUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParkingSlots/bulk/occupancy": {
      "put": {
        "tags": [
          "ParkingSlots"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkOccupancyUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkOccupancyUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkOccupancyUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SlotFeatures/assign": {
      "post": {
        "tags": [
          "SlotFeatures"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignSlotFeatureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignSlotFeatureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignSlotFeatureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SlotFeatures/remove": {
      "post": {
        "tags": [
          "SlotFeatures"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSlotFeatureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSlotFeatureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSlotFeatureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SlotFeatures/slot/{slotId}": {
      "get": {
        "tags": [
          "SlotFeatures"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SlotFeatures/feature/{featureId}": {
      "get": {
        "tags": [
          "SlotFeatures"
        ],
        "parameters": [
          {
            "name": "featureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/by-role/{role}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}/role": {
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}/deactivate": {
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}/activate": {
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}/with-vehicles": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicle/{id}": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Vehicle"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Vehicle"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicle": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Vehicle"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVehicleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVehicleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVehicleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicle/user-vehicles": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicle/by-license-plate/{licensePlate}": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "parameters": [
          {
            "name": "licensePlate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivateReservationDto": {
        "required": [
          "reservationId"
        ],
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "integer",
            "format": "int32"
          },
          "actualEntryTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignSlotFeatureDto": {
        "required": [
          "featureId",
          "slotId"
        ],
        "type": "object",
        "properties": {
          "slotId": {
            "type": "integer",
            "format": "int32"
          },
          "featureId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BookSlotDto": {
        "required": [
          "plannedEntryTime",
          "plannedExitTime",
          "slotId",
          "vehicleId"
        ],
        "type": "object",
        "properties": {
          "vehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "slotId": {
            "type": "integer",
            "format": "int32"
          },
          "plannedEntryTime": {
            "type": "string",
            "format": "date-time"
          },
          "plannedExitTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BroadcastNotificationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "notificationType": {
            "$ref": "#/components/schemas/BroadcastNotificationType"
          },
          "status": {
            "$ref": "#/components/schemas/EmailStatus"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "targetRole": {
            "$ref": "#/components/schemas/UserRole"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BroadcastNotificationType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "BulkOccupancyUpdateRequest": {
        "type": "object",
        "properties": {
          "slotIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "isOccupied": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BulkStatusUpdateRequest": {
        "type": "object",
        "properties": {
          "slotIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordDto": {
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "currentPassword": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateBroadcastNotificationDto": {
        "required": [
          "message",
          "notificationType",
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "message": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "notificationType": {
            "$ref": "#/components/schemas/BroadcastNotificationType"
          },
          "targetRole": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "additionalProperties": false
      },
      "CreateFeatureDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "priceModifier": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateParkingRateDto": {
        "required": [
          "dailyRate",
          "hourlyRate",
          "vehicleType"
        ],
        "type": "object",
        "properties": {
          "vehicleType": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "hourlyRate": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "dailyRate": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateParkingSlotDto": {
        "required": [
          "slotNumber"
        ],
        "type": "object",
        "properties": {
          "slotNumber": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "floor": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "section": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "slotImageUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateVehicleDto": {
        "required": [
          "licensePlate",
          "vehicleType"
        ],
        "type": "object",
        "properties": {
          "licensePlate": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "vehicleType": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "brand": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "model": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "color": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vehicleImageUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailNotificationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "parkingSessionId": {
            "type": "integer",
            "format": "int32"
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "notificationType": {
            "$ref": "#/components/schemas/NotificationType"
          },
          "status": {
            "$ref": "#/components/schemas/EmailStatus"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EmailStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "EndParkingSessionDto": {
        "required": [
          "sessionId"
        ],
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int32"
          },
          "exitTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NotificationType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "ParkingRateResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleType": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "hourlyRate": {
            "type": "number",
            "format": "double"
          },
          "dailyRate": {
            "type": "number",
            "format": "double"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PaymentStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "RegisterDto": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "password",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "format": "tel"
          },
          "password": {
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RemoveSlotFeatureDto": {
        "required": [
          "featureId",
          "slotId"
        ],
        "type": "object",
        "properties": {
          "slotId": {
            "type": "integer",
            "format": "int32"
          },
          "featureId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SendEmailNotificationDto": {
        "required": [
          "emailAddress",
          "message",
          "notificationType",
          "parkingSessionId",
          "subject",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "parkingSessionId": {
            "type": "integer",
            "format": "int32"
          },
          "emailAddress": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "subject": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "message": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "notificationType": {
            "$ref": "#/components/schemas/NotificationType"
          }
        },
        "additionalProperties": false
      },
      "SlotSearchDto": {
        "type": "object",
        "properties": {
          "floor": {
            "type": "string",
            "nullable": true
          },
          "section": {
            "type": "string",
            "nullable": true
          },
          "isOccupied": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StartParkingSessionDto": {
        "required": [
          "slotId",
          "vehicleId"
        ],
        "type": "object",
        "properties": {
          "vehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "slotId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateBroadcastNotificationDto": {
        "required": [
          "message",
          "notificationType",
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "message": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "notificationType": {
            "$ref": "#/components/schemas/BroadcastNotificationType"
          },
          "targetRole": {
            "$ref": "#/components/schemas/UserRole"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateFeatureDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "priceModifier": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateParkingFeeDto": {
        "required": [
          "parkingFee",
          "sessionId"
        ],
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int32"
          },
          "parkingFee": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UpdateParkingRateDto": {
        "required": [
          "dailyRate",
          "hourlyRate",
          "vehicleType"
        ],
        "type": "object",
        "properties": {
          "vehicleType": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "hourlyRate": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "dailyRate": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateParkingSlotDto": {
        "required": [
          "slotNumber"
        ],
        "type": "object",
        "properties": {
          "slotNumber": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "floor": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "section": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "slotImageUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserDto": {
        "required": [
          "firstName",
          "lastName",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "phoneNumber": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "format": "tel"
          },
          "profileImageUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRoleDto": {
        "required": [
          "role",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "additionalProperties": false
      },
      "UpdateVehicleDto": {
        "required": [
          "licensePlate",
          "vehicleType"
        ],
        "type": "object",
        "properties": {
          "licensePlate": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "vehicleType": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "brand": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "model": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "color": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vehicleImageUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "VehicleType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter JWT Bearer token **_only_** (without 'Bearer ' prefix)",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}